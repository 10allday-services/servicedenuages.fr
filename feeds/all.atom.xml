<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Service de nuages</title><link href="http://www.servicedenuages.fr/" rel="alternate"></link><link href="http://www.servicedenuages.fr/feeds/all.atom.xml" rel="self"></link><id>http://www.servicedenuages.fr/</id><updated>2015-05-11T00:00:00+02:00</updated><entry><title>Retours des APIdays Barcelona</title><link href="http://www.servicedenuages.fr/retours-des-apidays-barcelona.html" rel="alternate"></link><updated>2015-05-11T00:00:00+02:00</updated><author><name>Service de Nuages</name></author><id>tag:www.servicedenuages.fr,2015-05-11:retours-des-apidays-barcelona.html</id><summary type="html">&lt;p&gt;Cette journée aux APIDays Barcelona a été d'une rare richesse ! Pour commencer, bravo à toute l'équipe et
tous les participants !&lt;/p&gt;
&lt;div class="figure align-center" style="width: 1024px; height: auto; max-width: 100%;"&gt;
&lt;img alt="@thetonyblank — https://twitter.com/thetonyblank/status/595860394561921025" src="http://www.servicedenuages.fr/images/apidays-room.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;p&gt;Je vais tenter de faire un retour le plus complet possible, en restant un minimum concis :) S'il y a
des points obscurs, «&lt;em&gt;lache tes coms&lt;/em&gt;» &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt;  !&lt;/p&gt;
&lt;div class="section" id="l-evenement"&gt;
&lt;h2&gt;L'évènement&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://mediterranea.apidays.io/"&gt;APIdays&lt;/a&gt; est un évènement qui a lieu dans plusieurs villes,
et par chance aussi à Barcelone.&lt;/p&gt;
&lt;p&gt;Naïvement, je n'aurais jamais pensé qu'il puisse exister une communauté aussi forte autour des APIs !
Je découvre donc une nouvelle famille de passionnés, pluri-disciplinaire et agnostique \o/.
Des nouveaux métiers et des participants de tous horizons, de la grosse multinationale aux obédiences XML/Java à la startup
hype en passant par des indépendants de toute sorte !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="l-affordance"&gt;
&lt;h2&gt;L'affordance&lt;/h2&gt;
&lt;p&gt;L'affordance, formulé par Don Norman, est un concept assez connu en ergonomie. Cela définit
la capacité d'un objet à transmettre ses fonctionnalités via son apparence. Pensez aux poignées
de porte, selon leur forme on sait si on doit tourner, tirer ou pousser.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/mamund"&gt;Mike Amundsen&lt;/a&gt; ouvrait la journée en étendant le concept aux APIs.
Une API, et l'apparence des informations présentées, doit suggérer ce qu'on peut faire avec.&lt;/p&gt;
&lt;p&gt;Il a rappelé cependant que les meilleurs designs étaient ceux qui permettaient de faire des
choses choses auxquelles les auteurs n'avaient pas pensé.&lt;/p&gt;
&lt;blockquote class="epigraph"&gt;
&lt;p&gt;A good API is hard to misuse.&lt;/p&gt;
&lt;p class="attribution"&gt;—&lt;a class="reference external" href="https://twitter.com/orliesaurus"&gt;Orlando Kalossakas&lt;/a&gt;, plus tard dans la journée.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="hypermedia"&gt;
&lt;h2&gt;Hypermedia&lt;/h2&gt;
&lt;p&gt;Plusieurs fois dans la journée, les évangélistes et fins prédicateurs ont expliqué que le
monde des APIs était là où était le Web il y 15 ans. On a dépassé le stade d'utiliser
&lt;tt class="docutils literal"&gt;GET /action=create&lt;/tt&gt; et REST est bien implanté, mais l'accessibilité des APIs, leur
fédération, leur utilisation transparente ou leur caractère inter-changeable semble encore loin.&lt;/p&gt;
&lt;p&gt;Les APIs manquent de liens.&lt;/p&gt;
&lt;blockquote class="epigraph"&gt;
&lt;p&gt;Hypermedia is just like hypertext but not limited to...text!&lt;/p&gt;
&lt;p class="attribution"&gt;—&lt;a class="reference external" href="https://twitter.com/gssor"&gt;Ross Garett&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Le Web était initialement pensé comme une gigantesque base de données distribuée et
exploitable sans préconfiguration. Sur le tard, il y a eu diverses initiatives,
comme le Web sémantique, avec les &lt;a class="reference external" href="http://fr.wikipedia.org/wiki/Ontologie_%28informatique%29"&gt;graphes d'ontologie&lt;/a&gt;, &lt;a class="reference external" href="http://fr.wikipedia.org/wiki/Resource_Description_Framework"&gt;RDF&lt;/a&gt; ou les micro-formats. On devrait pouvoir dire
aujourd'hui que c'est un échec, car cela n'a pas été adopté partout.&lt;/p&gt;
&lt;p&gt;Mais, mais... il y a encore de l'espoir avec les APIs :) &lt;a class="footnote-reference" href="#id4" id="id2"&gt;[2]&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="conventions"&gt;
&lt;h2&gt;Conventions&lt;/h2&gt;
&lt;p&gt;En contrebas du Web ou des APIs sémantiques, il y a l'approche qui consiste à mettre au point des
conventions simples.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/steveklabnik"&gt;Steve Klabnik&lt;/a&gt; qui a une culture Ruby a fait le parallèle
avec les frameworks Web et l'approche «&lt;em&gt;Convention over configuration&lt;/em&gt;».&lt;/p&gt;
&lt;div class="figure align-center" style="width: 1023px; height: auto; max-width: 100%;"&gt;
&lt;img alt="https://twitter.com/apidaysMedit/status/595883679500623872" src="http://www.servicedenuages.fr/images/apidays-steve-klabnik.jpg" style="width: 1023px; height: auto; max-width: 100%;"/&gt;
&lt;/div&gt;
&lt;p&gt;C'est le cas de la &lt;a class="reference external" href="http://jsonapi.org/"&gt;spécification JSON-API&lt;/a&gt;, qui ne cherche pas à aborder
les concepts de sémantique mais simplement d'économiser aux développeurs de débattre des
&lt;a class="reference external" href="http://fr.wikipedia.org/wiki/Loi_de_futilit%C3%A9_de_Parkinson"&gt;choix inutiles&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote class="epigraph"&gt;
&lt;p&gt;I looked in Google Images to find pictures of bikesheds and found that.
I thought «that's not a bikeshed». OMG, I was actually bikeshedding about bikesheds!&lt;/p&gt;
&lt;p class="attribution"&gt;—Steve&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Par la même occasion, l'idée est de faciliter l'implémentation des clients, et &lt;a class="reference external" href="https://github.com/emberjs/data"&gt;le composant data Ember.js&lt;/a&gt;
supportera la spec dans la prochaine release.&lt;/p&gt;
&lt;p&gt;Nos intentions pour &lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/rationale.html#philosophy"&gt;Cliquet&lt;/a&gt; sont exactement celles-ci. Nous
allons donc &lt;a class="reference external" href="https://github.com/mozilla-services/cliquet/issues/254"&gt;probablement converger&lt;/a&gt;. D'autant
que les specs sont très proches.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="documentation-d-api"&gt;
&lt;h2&gt;Documentation d'API&lt;/h2&gt;
&lt;p&gt;J'ai pu assister à une &lt;a class="reference external" href="https://speakerdeck.com/l0ck3/beyond-docs-lessons-learned-rebuilding-the-paymill-documentation"&gt;excellente présentation&lt;/a&gt;
de &lt;a class="reference external" href="https://twitter.com/yannirbah"&gt;Yann Irbah&lt;/a&gt;,
qui résumait les bonnes pratiques pour documenter une API sous forme de produit.&lt;/p&gt;
&lt;p&gt;Les points importants:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Exposer la valeur ajoutée du produit : Pourquoi est-ce qu'il simplifie la vie ?&lt;/li&gt;
&lt;li&gt;Documenter les premiers pas jusqu'à l'utilisation avancée ;&lt;/li&gt;
&lt;li&gt;Ne pas se contenter du «&lt;em&gt;hello world&lt;/em&gt;» ;&lt;/li&gt;
&lt;li&gt;Écrire des tutoriaux pour chacun des cas d'utilisation ;&lt;/li&gt;
&lt;li&gt;Les développeurs constituent un excellent vecteur marketting ;&lt;/li&gt;
&lt;li&gt;Aider à avoir confiance en l'outil ;&lt;/li&gt;
&lt;li&gt;Proposer une documentation avec des end-points interactifs ;&lt;/li&gt;
&lt;li&gt;Mettre à jour en continu.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://swagger.io/"&gt;Swagger&lt;/a&gt; et &lt;a class="reference external" href="https://github.com/tripit/slate"&gt;Slate&lt;/a&gt; ont le vent en poupe.&lt;/p&gt;
&lt;p&gt;Il est possible d'aller très très loin, avec des outils qui mettent à jour les snippets
de la doc quand l'API change par exemple...&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="annuaire-d-api"&gt;
&lt;h2&gt;Annuaire d'API&lt;/h2&gt;
&lt;p&gt;La dernière conférence de la journée était celle de &lt;a class="reference external" href="https://twitter.com/kinlane"&gt;Kin Lane&lt;/a&gt; sur
les cycles de vie des APIs.&lt;/p&gt;
&lt;p&gt;Il a présenté &lt;a class="reference external" href="http://apis.io"&gt;http://apis.io&lt;/a&gt;, un annuaire d'APIs.&lt;/p&gt;
&lt;p&gt;L'idée consiste à écrire un fichier &lt;a class="reference external" href="http://apisjson.org/"&gt;apis.json&lt;/a&gt;, un peu l'équivalent
des &lt;em&gt;sitemaps&lt;/em&gt;, mais pour les APIs.&lt;/p&gt;
&lt;p&gt;Celui-ci va décrire les end-points (en référençant un fichier &lt;a class="reference external" href="http://swagger.io/"&gt;Swagger&lt;/a&gt; par exemple) et ajouter des
métadonnées (description, tags, version, blog URI, licence, ...).&lt;/p&gt;
&lt;p&gt;Cela n'a pas seulement pour objectif de construire un annuaire global ! Cela peut être un
annuaire local à l'infrastructure que les (micro)services interrogent, plutôt que reposer
sur une configuration en dur (a.k.a &lt;a class="reference external" href="http://jasonwilder.com/blog/2014/02/04/service-discovery-in-the-cloud/"&gt;Service discovery&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;À terme, on pourrait aussi imaginer que tous les appareils de la maison qui disposent
d'une API viennent s'enregistrer sur le routeur ADSL du domicile !
Ainsi en un seul coup d'oeil on pourrait avoir accès à leur documentation et les bidouiller !
Voire même que les appareils se détectent et se connectent entre eux automatiquement
si leurs APIs respectives suivent des normes/standards.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="discussions"&gt;
&lt;h2&gt;Discussions&lt;/h2&gt;
&lt;p&gt;Cette journée a été l'occasion de faire des rencontres ! Tout d'abord, ce fût un grand
plaisir de retrouver Silvia, qui a été &lt;a class="reference external" href="https://github.com/mozilla-services/cliquet/pull/120"&gt;la première à contribuer sur Cliquet&lt;/a&gt; !&lt;/p&gt;
&lt;div class="section" id="loosely-coupled"&gt;
&lt;h3&gt;« Loosely coupled »&lt;/h3&gt;
&lt;p&gt;De nombreux participants semblaient nous rejoindre sur l'idée qu'une solution à
un problème ne doit pas être pas liée à une implémentation (ex. &lt;em&gt;CouchDB&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Il semblerait que les grandes idées passent aujourd'hui d'abord par la définition d'un protocole,
puis seulement ensuite par la proposition d'implémentations de référence (e.g. &lt;a class="reference external" href="http://matrix.org"&gt;http://matrix.org&lt;/a&gt;, &lt;a class="reference external" href="http://wamp.ws/"&gt;http://wamp.ws/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;C'est une condition nécessaire pour que les services soient «&lt;em&gt;faiblement liés&lt;/em&gt;», simples et interchangeables.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="kinto-est-pertinent"&gt;
&lt;h3&gt;Kinto est pertinent&lt;/h3&gt;
&lt;p&gt;En échangeant, j'ai pu confirmer que ce que nous essayons de faire avec &lt;a class="reference external" href="http://kinto.readthedocs.org/"&gt;Kinto&lt;/a&gt; a du sens.
La plupart ont résumé en disant «&lt;em&gt;Oh, un [Parse|Kinvey|Firebase] open-source !&lt;/em&gt;». Nous aurons
l'occasion d'en reparler, et restons modestes...&lt;/p&gt;
&lt;p&gt;Même les gens de &lt;a class="reference external" href="http://www.typeform.com/"&gt;Typeform&lt;/a&gt;, une startup barcelonaise qui fait une alternative
à Google Forms, ont manifesté son intérêt pour ce genre de solution !&lt;/p&gt;
&lt;p&gt;L'idée qu'on expérimente autour des permissions et des rôles avec OAuth2
paraissait séduire :) Après un très bref échange avec &lt;a class="reference external" href="https://twitter.com/medjawii"&gt;Medhi&lt;/a&gt; fondateur
de &lt;a class="reference external" href="https://oauth.io"&gt;OAuth.io&lt;/a&gt;, il semblerait que les scopes OAuth2 ne suffisent pas pour
faire ce qu'on veut.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mashape-kong"&gt;
&lt;h3&gt;Mashape Kong&lt;/h3&gt;
&lt;p&gt;Les gens de Mashape m'ont sauté dessus «&lt;em&gt;Oh Mathieu !&lt;/em&gt;». Ça fait drôle ! ... c'était juste
grâce à &lt;a class="reference external" href="https://twitter.com/leplatrem/status/594238272177577984"&gt;ce tweet sur Kong&lt;/a&gt; :]&lt;/p&gt;
&lt;p&gt;Ils n'ont pas lâché le mode gros délire, et on a bien papotté, notamment de
&lt;a class="reference external" href="https://github.com/mozilla/videur"&gt;videur&lt;/a&gt;, qu'ils ne connaissaient pas. Ils semblaient
bien intéressés par la partie &lt;em&gt;validation de RFC / specs&lt;/em&gt; et devraient revenir
vers nous :)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="boite-a-outils"&gt;
&lt;h2&gt;Boite à outils&lt;/h2&gt;
&lt;p&gt;Gestion&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://getkong.org"&gt;http://getkong.org&lt;/a&gt; — API middleware&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.apitools.com"&gt;https://www.apitools.com&lt;/a&gt; — API middleware&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.mashape.com"&gt;https://www.mashape.com&lt;/a&gt; — Market place pour APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Documentation&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://docpad.org"&gt;https://docpad.org&lt;/a&gt; — générateur de sites statiques ;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://apiblueprint.org"&gt;https://apiblueprint.org&lt;/a&gt; — comme Swagger mais en markdown ;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://raml.org"&gt;http://raml.org&lt;/a&gt; — RESTful API Modeling Language ;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://readme.io"&gt;http://readme.io&lt;/a&gt; — Service de documentation&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://gelato.io"&gt;https://gelato.io&lt;/a&gt; — Documentations techniques jolies&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://apiembed.com"&gt;https://apiembed.com&lt;/a&gt; — Snippets de requetes API&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Studio / Mock / SDK&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://apiary.io"&gt;https://apiary.io&lt;/a&gt; ­— Studio&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.mocaroni.com"&gt;https://www.mocaroni.com&lt;/a&gt; — Studio/Mock&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mockbin.org"&gt;http://mockbin.org&lt;/a&gt; — Créer des mock d'API&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://restunited.com"&gt;http://restunited.com&lt;/a&gt; — Génération de SDK&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://apimatic.io"&gt;https://apimatic.io&lt;/a&gt; — Génération de SDK&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.getpostman.com"&gt;https://www.getpostman.com&lt;/a&gt; — Extension Chrome pour REST&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Divers&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://management.apievangelist.com/building-blocks.html"&gt;API building blocks&lt;/a&gt; par Kin Lane&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/cjbarber/ToolsOfTheTrade"&gt;https://github.com/cjbarber/ToolsOfTheTrade&lt;/a&gt; — Services en ligne utiles&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/oauth-io/oauthd"&gt;OAuthd&lt;/a&gt; — Le daemon de OAuth.io&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://loader.io"&gt;http://loader.io&lt;/a&gt; — Load testing service&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://divshot.com"&gt;https://divshot.com&lt;/a&gt; — Hébergement de fichiers statiques&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://schemaform.io"&gt;http://schemaform.io&lt;/a&gt; — Angular + JSON Schema&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/mgonto/restangular"&gt;restangular&lt;/a&gt; — REST + Angular&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://sailsjs.org"&gt;http://sailsjs.org&lt;/a&gt; — Framework NodeJS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Les APIs sont partout. Toutes les entreprises ont des APIs. Les APIs sont les
blocs avec lesquels les développeurs construiront les applications du futur.&lt;/p&gt;
&lt;img alt="@paulsbruce — https://twitter.com/paulsbruce/status/596347015283548161" src="http://www.servicedenuages.fr/images/apidays-thanks-staff.jpg" style="width: 1024px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;Merci à toutes et tous ceux qui ont participé de près ou de loin à l'organisation
de cet évènement fédérateur.&lt;/p&gt;
&lt;p&gt;Je vous conseille de guetter les futures dates dans les différentes villes du monde !&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.apidays.io"&gt;http://www.apidays.io&lt;/a&gt;&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Bon courage à celui qui tentera de traduire ça &lt;a class="reference external" href="http://blog.notmyidea.org/language.html"&gt;tiens&lt;/a&gt; !&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;&lt;a class="reference external" href="http://sookocheff.com/posts/2014-03-11-on-choosing-a-hypermedia-format/"&gt;http://sookocheff.com/posts/2014-03-11-on-choosing-a-hypermedia-format/&lt;/a&gt; (gist: &lt;a class="reference external" href="https://gist.github.com/soofaloofa/9350847"&gt;https://gist.github.com/soofaloofa/9350847&lt;/a&gt;)&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary></entry><entry><title>Comment passer de LIMIT / OFFSET aux Continuation Tokens ?</title><link href="http://www.servicedenuages.fr/comment-passer-de-limit-offset-aux-continuation-tokens.html" rel="alternate"></link><updated>2015-05-04T00:00:00+02:00</updated><author><name>Service de Nuages</name></author><id>tag:www.servicedenuages.fr,2015-05-04:comment-passer-de-limit-offset-aux-continuation-tokens.html</id><summary type="html">&lt;p&gt;Si vous êtes là, c'est que quelqu'un a dû vous le dire : Paginer sur des
grosses tables avec LIMIT et OFFSET ne monte pas en charge : plus
on avance dans les pages, plus c'est lent.&lt;/p&gt;
&lt;p&gt;C'est dommage parce que c'était facile à appréhender ! La limite donne
le nombre d'éléments affichés et le décalage est calculé en fonction
de la page en cours !&lt;/p&gt;
&lt;p&gt;Il y a même une initiative "&lt;a class="reference external" href="http://use-the-index-luke.com/no-offset"&gt;STOP OFFSET&lt;/a&gt;" pour que les développeurs y
pensent.&lt;/p&gt;
&lt;p&gt;Sur ce site, la solution évoquée consiste à mettre en place une keyset
pagination, ou seek method. Autrement dit une pagination à base de
filtrage.&lt;/p&gt;
&lt;p&gt;L'idée générale consiste à remplacer les &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;?page=3&amp;amp;size=10&lt;/span&gt;&lt;/tt&gt; de vos URLs
par un ensemble de critères de filtrage sur la table qui réduiront les
résultats obtenus à ceux attendus sur la page en cours.&lt;/p&gt;
&lt;p&gt;C'est le serveur qui va construire les requêtes de filtrages
nécessaires à la pagination à partir d'informations sur le dernier
élément affiché. Ces informations sont appelées &lt;strong&gt;continuation
token&lt;/strong&gt; car elles permettent au serveur de savoir d'où il doit
reprendre pour continuer à afficher les résultats.&lt;/p&gt;
&lt;div class="section" id="pourquoi-c-est-mal-d-utiliser-offset-et-limit"&gt;
&lt;h2&gt;Pourquoi c'est mal d'utiliser OFFSET et LIMIT ?&lt;/h2&gt;
&lt;p&gt;Le site ci-dessus l'explique mieux que moi, mais ce qu'il faut retenir
c'est que la base de données doit faire la requête entière pour
ensuite aller se déplacer jusqu'à la bonne ligne.&lt;/p&gt;
&lt;p&gt;Si pendant que vous changez de page quelqu'un modifie la collection
vous pouvez aussi louper des entrées ou avoir des doublons dans les
résultats. Cela rend la liste des résultats incohérente entre deux
affichages.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="comment-faire-pour-s-en-passer"&gt;
&lt;h2&gt;Comment faire pour s'en passer ?&lt;/h2&gt;
&lt;p&gt;Pour bien comprendre, prenons le cas le plus simple.&lt;/p&gt;
&lt;p&gt;Si vous triez par &lt;tt class="docutils literal"&gt;id&lt;/tt&gt; (la clé primaire), il vous suffit de garder
trace du dernier &lt;tt class="docutils literal"&gt;id&lt;/tt&gt; de la page précédente.&lt;/p&gt;
&lt;p&gt;Prenons comme exemple la table de salariés suivante.
Pour les besoins de l'exercice la date de recrutement est unique.
Les données sont inexactes mais plausibles.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;CREATE&lt;/span&gt; &lt;span class="k"&gt;TABLE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt; &lt;span class="n"&gt;AUTO_INCREMENT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;nom&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="nb"&gt;date&lt;/span&gt; &lt;span class="k"&gt;NOT&lt;/span&gt; &lt;span class="k"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="k"&gt;PRIMARY&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
  &lt;span class="k"&gt;UNIQUE&lt;/span&gt; &lt;span class="k"&gt;KEY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;CHARSET&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;utf8&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nom&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Soci&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;recrutement&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Rodolphe&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Tarek&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2009&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Benoit&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Bruno&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mathieu&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Natal&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nicolas&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pour l'exemple, nous allons également paginer nos
résultats par deux.&lt;/p&gt;
&lt;div class="section" id="voici-les-requetes-que-nous-ferions-en-utilisant-offset-et-limit"&gt;
&lt;h3&gt;Voici les requêtes que nous ferions en utilisant OFFSET et LIMIT&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Rodolphe&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Tarek&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2009&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;OFFSET&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Benoit&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="comment-peut-on-obtenir-le-meme-resultat-sans-utiliser-offset"&gt;
&lt;h3&gt;Comment peut-on obtenir le même résultat sans utiliser OFFSET ?&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Rodolphe&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Tarek&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2009&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Benoit&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quand on fait le tri sur une valeur unique pour toute la collection,
on se rend compte que l'on peut sauvegarder la valeur du dernier
élément de la liste et l'utiliser pour faire une condition where.&lt;/p&gt;
&lt;p&gt;Faisons maintenant le tri sur la date d'embauche :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Tarek&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2009&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Benoit&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'2012-02-25'&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Bruno&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;

&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'2013-06-14'&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Natal&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nicolas&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="et-pour-la-page-precedente"&gt;
&lt;h3&gt;Et pour la page précédente ?&lt;/h3&gt;
&lt;p&gt;Soit on se rappelle de la règle de filtrage précédente, soit on peut
ruser en inversant l'ordre de tri puis en selectionnant les résultats
supérieurs au premier élément de la page courante et en affichant les
résultats dans l'ordre inverse :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="s1"&gt;'2013-08-05'&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;date_embauche&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="k"&gt;DESC&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Bruno&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Qu'il faut afficher à l'utilisateur comme cela :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Bruno&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="et-pour-les-tris-sur-des-cles-non-uniques"&gt;
&lt;h2&gt;Et pour les tris sur des clés non uniques ?&lt;/h2&gt;
&lt;p&gt;Dès lors qu'une clé de tri n'est plus unique, contrairement à
&lt;tt class="docutils literal"&gt;date_embauche&lt;/tt&gt; et &lt;tt class="docutils literal"&gt;id&lt;/tt&gt; dans notre exemple, il faut trouver une
requête qui permet d'identifier de manière unique la ligne à partir de
laquelle continuer.&lt;/p&gt;
&lt;p&gt;Prenons la requête suivante :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;nom&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nom&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Soci&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;recrutement&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mathieu&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nicolas&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Tarek&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2009&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Benoit&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Bruno&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Natal&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Rodolphe&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Si on souhaite obtenir la deuxième page en utilisant &lt;tt class="docutils literal"&gt;id&lt;/tt&gt; on se rend
compte qu'il y a un souci.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;nom&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nicolas&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Natal&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Or la seconde page attendue est :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nicolas&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="tri-avec-une-seule-cle-non-unique"&gt;
&lt;h3&gt;Tri avec une seule clé non unique&lt;/h3&gt;
&lt;p&gt;Commençons avec un tri sur une seule colonne non unique &lt;tt class="docutils literal"&gt;societe&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;ID&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nom&lt;/span&gt;      &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Soci&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;Date&lt;/span&gt; &lt;span class="n"&gt;de&lt;/span&gt; &lt;span class="n"&gt;recrutement&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Tarek&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2009&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mathieu&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nicolas&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Rodolphe&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Benoit&lt;/span&gt;   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Bruno&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Natal&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;08&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;05&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On se rend compte qu'il s'agit en fait de cette requête :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notre requête pour la page deux est donc :&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Les salariés qui ont un nom de société supérieur à Mozilla &lt;strong&gt;ou&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Les salariés de Mozilla qui ont un id supérieur à 4&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt;
&lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mathieu&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;06&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On peut vérifier que le cas limite fonctionne aussi:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt;
&lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nicolas&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Rodolphe&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Novapost&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;09&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="tri-sur-de-multiples-cle-non-uniques"&gt;
&lt;h3&gt;Tri sur de multiples clé non uniques&lt;/h3&gt;
&lt;p&gt;Maintenant revenons à notre tri par &lt;tt class="docutils literal"&gt;societe&lt;/tt&gt; et par &lt;tt class="docutils literal"&gt;nom&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Pour atteindre la page deux, on a donc trois ensembles à concaténer:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Les salariés de &lt;tt class="docutils literal"&gt;Mozilla&lt;/tt&gt; qui s'appellent &lt;tt class="docutils literal"&gt;Mathieu&lt;/tt&gt; et dont l'&lt;tt class="docutils literal"&gt;id&lt;/tt&gt; est supérieur à &lt;tt class="docutils literal"&gt;7&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Les salariés de &lt;tt class="docutils literal"&gt;Mozilla&lt;/tt&gt; dont le nom est supérieur à &lt;tt class="docutils literal"&gt;Mathieu&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Les salariés dont le nom de société est supérieur à &lt;tt class="docutils literal"&gt;Mozilla&lt;/tt&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;nom&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mathieu'&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;nom&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Mathieu'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;nom&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nicolas&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="err"&gt;é&lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;11&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On peut tester notre cas limite en ajoutant&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mathieu&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Et on a bien :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;salaries&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;nom&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mathieu'&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt; &lt;span class="k"&gt;AND&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;nom&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Mathieu'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;OR&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'Mozilla'&lt;/span&gt;
&lt;span class="k"&gt;ORDER&lt;/span&gt; &lt;span class="k"&gt;BY&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;societe&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;`&lt;/span&gt;&lt;span class="n"&gt;nom&lt;/span&gt;&lt;span class="o"&gt;`&lt;/span&gt;
&lt;span class="k"&gt;LIMIT&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mathieu&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;22&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Nicolas&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Mozilla&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;          &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;----+----------+----------+---------------------+&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="generalisation"&gt;
&lt;h2&gt;Généralisation&lt;/h2&gt;
&lt;p&gt;La manière générique que j'ai trouvée pour utiliser un &lt;strong&gt;Continuation
Token&lt;/strong&gt; ou &lt;strong&gt;jeton de continuation&lt;/strong&gt; tout en laissant l'utilisateur
choisir sa requête de tri est de générer le jeton à partir du dernier
élément de la page et des champs de tri.&lt;/p&gt;
&lt;p&gt;En complétant toujours les champs de tri par la clé primaire à la fin.&lt;/p&gt;
&lt;p&gt;Ensuite je génère une fonction récursive qui prend la liste des
champs de tri et la dernière entrée de la page précédente et me
retourne une liste de conditions de tri.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_continuation_token_conditions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sorting&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;"""Return the list of conditions for a given record and sorting attributes.&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; get_continuation_token_conditions(&lt;/span&gt;
&lt;span class="sd"&gt;    ...     {'id': 7, 'nom': 'Mathieu', 'societe': 'Mozilla'},&lt;/span&gt;
&lt;span class="sd"&gt;    ...     ['societe', 'nom', 'id']&lt;/span&gt;
&lt;span class="sd"&gt;    ... )&lt;/span&gt;
&lt;span class="sd"&gt;    [(('societe', '=', 'Mozilla'), ('nom', '=', 'Mathieu'), ('id', '&amp;gt;', 7)),&lt;/span&gt;
&lt;span class="sd"&gt;     (('societe', '=', 'Mozilla'), ('nom', '&amp;gt;', 'Mathieu')),&lt;/span&gt;
&lt;span class="sd"&gt;     (('societe', '&amp;gt;', 'Mozilla'))]&lt;/span&gt;

&lt;span class="sd"&gt;    &amp;gt;&amp;gt;&amp;gt; get_continuation_token_conditions(&lt;/span&gt;
&lt;span class="sd"&gt;    ...     {'id': 7, 'nom': 'Mathieu', 'societe': 'Mozilla'},&lt;/span&gt;
&lt;span class="sd"&gt;    ...     ['societe', '-nom', 'id']&lt;/span&gt;
&lt;span class="sd"&gt;    ... )&lt;/span&gt;
&lt;span class="sd"&gt;    [(('societe', '=', 'Mozilla'), ('nom', '=', 'Mathieu'), ('id', '&amp;gt;', 7)),&lt;/span&gt;
&lt;span class="sd"&gt;     (('societe', '=', 'Mozilla'), ('nom', '&amp;lt;', 'Mathieu')),&lt;/span&gt;
&lt;span class="sd"&gt;     (('societe', '&amp;gt;', 'Mozilla'))]&lt;/span&gt;

&lt;span class="sd"&gt;    """&lt;/span&gt;

    &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;sorting&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
        &lt;span class="n"&gt;field_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'='&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

    &lt;span class="n"&gt;field&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sorting&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;field_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;'&amp;lt;'&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s"&gt;'&amp;gt;'&lt;/span&gt;
    &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;direction&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;results&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sorting&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;get_continuation_token_conditions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;record&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;sorting&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Vous voyez que c'est possible de faire de la pagination à l'aide d'un
&lt;strong&gt;continuation token&lt;/strong&gt; tout en gardant les fonctionnalités de tri.&lt;/p&gt;
&lt;p&gt;L'inconvénient c'est qu'il est impossible de pouvoir sauter à la
dernière page ou à une page donnée, heureusement les utilisateurs sont
maintenant habitués à filtrer les résultats afin d'avoir la réponse
sur la première ou deuxième page et dans le cas où ils souhaitent tous
les résultats, ils regardent les pages dans l'ordre.&lt;/p&gt;
&lt;p&gt;Qui dit conditions de tri dit aussi index et c'est là que bien cadrer
les fonctionnalités de tri autorisées devient intéressant. Est-ce bien
nécessaire de laisser l'utilisateur choisir les champs de tri, ou
peut-on se contenter de ne lui laisser comme choix que le sens du tri
sur des champs prédéfinis ?&lt;/p&gt;
&lt;p&gt;Si votre condition de pagination est fixe, vous allez pouvoir créer
les index nécessaires et optimiser au maximum vos requêtes de pagination.&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Eco-système et stockage générique</title><link href="http://www.servicedenuages.fr/eco-systeme-et-stockage-generique.html" rel="alternate"></link><updated>2015-04-30T00:00:00+02:00</updated><author><name>Service de Nuages</name></author><id>tag:www.servicedenuages.fr,2015-04-30:eco-systeme-et-stockage-generique.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;tl;dr Nous devons construire un service de suivi de paiements, et nous
hésitons à continuer à nous entêter avec notre propre solution de
stockage/synchronisation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Comme nous l'écrivions &lt;a class="reference external" href="http://www.servicedenuages.fr/service-de-nuages.html"&gt;dans l'article précédent&lt;/a&gt;, nous souhaitons construire une
solution de stockage générique. On refait &lt;a class="reference external" href="http://daybed.readthedocs.org"&gt;Daybed&lt;/a&gt;
chez Mozilla !&lt;/p&gt;
&lt;p&gt;Notre objectif est simple: permettre aux développeurs d'application, internes
à Mozilla ou du monde entier, de faire persister et synchroniser facilement des
données associées à un utilisateur.&lt;/p&gt;
&lt;p id="storage-specs"&gt;Les aspects de l'architecture qui nous semblent incontournables:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;La solution doit reposer sur un protocole, et non sur une implémentation ;&lt;/li&gt;
&lt;li&gt;L'auto-hébergement de l'ensemble doit être simplissime ;&lt;/li&gt;
&lt;li&gt;L'authentification doit être &lt;em&gt;pluggable&lt;/em&gt;, voire décentralisée (OAuth2, FxA,
Persona) ;&lt;/li&gt;
&lt;li&gt;Les enregistrements doivent pouvoir être validés par le serveur ;&lt;/li&gt;
&lt;li&gt;Les données doivent pouvoir être stockées dans n'importe quel backend ;&lt;/li&gt;
&lt;li&gt;Un système de permissions doit permettre de protéger des collections, ou de
partager des enregistrements de manière fine ;&lt;/li&gt;
&lt;li&gt;La résolution de conflits doit pouvoir avoir lieu sur le serveur ;&lt;/li&gt;
&lt;li&gt;Le client doit être pensé «&lt;em&gt;offline-first&lt;/em&gt;» ;&lt;/li&gt;
&lt;li&gt;Le client doit pouvoir réconcilier les données simplement ;&lt;/li&gt;
&lt;li&gt;Le client doit pouvoir être utilisé aussi bien dans le navigateur que côté
serveur ;&lt;/li&gt;
&lt;li&gt;Tous les composants se doivent d´être simples et substituables facilement.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;La première question qui nous a été posée fût «&lt;em&gt;Pourquoi vous n'utilisez pas
PouchDB ou Remote Storage ?&lt;/em&gt;»&lt;/p&gt;
&lt;div class="section" id="remote-storage"&gt;
&lt;h2&gt;Remote Storage&lt;/h2&gt;
&lt;p&gt;Remote Storage est un standard ouvert pour du stockage par utilisateur.  &lt;a class="reference external" href="http://tools.ietf.org/html/draft-dejong-remotestorage-04"&gt;La
specification&lt;/a&gt; se
base sur des standards déjà existants et éprouvés:  Webfinger, OAuth 2, CORS et
REST.&lt;/p&gt;
&lt;p&gt;L'API est simple, des &lt;a class="reference external" href="http://blog.cozycloud.cc/news/2014/08/12/when-unhosted-meets-cozy-cloud/"&gt;projets prestigieux l'utilisent&lt;/a&gt;.
Il y a plusieurs &lt;a class="reference external" href="https://github.com/jcoglan/restore"&gt;implémentations&lt;/a&gt; du
serveur, et il existe &lt;a class="reference external" href="https://www.npmjs.com/package/remotestorage-server"&gt;un squelette Node&lt;/a&gt; pour construire un
serveur sur mesure.&lt;/p&gt;
&lt;img alt="Remote Storage widget" class="align-left" src="http://www.servicedenuages.fr/images/remotestorage-widget.png" style="width: 243px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;Le client &lt;a class="reference external" href="https://github.com/remotestorage/remotestorage.js/"&gt;remoteStorage.js&lt;/a&gt; permet d'intégrer la
solution dans les applications Web.  Il se charge du «store local», du cache,
de la synchronization, et fournit un widget qui permet aux utilisateurs des
applications de choisir le serveur qui recevra les données (via Webfinger).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/michielbdejong/ludbud"&gt;ludbud&lt;/a&gt;, la version épurée de
&lt;em&gt;remoteStorage.js&lt;/em&gt;, se limite à l'abstraction du stockage distant.  Cela
permettrait à terme, d'avoir une seule bibliothèque pour stocker dans un
serveur &lt;em&gt;remoteStorage&lt;/em&gt;, &lt;em&gt;ownCloud&lt;/em&gt; ou chez les méchants comme &lt;em&gt;Google Drive&lt;/em&gt;
ou &lt;em&gt;Dropbox&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Au premier abord, la spécification correspond à ce que nous voulons accomplir:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;La philosophie du protocole est saine;&lt;/li&gt;
&lt;li&gt;L'éco-système est bien fichu;&lt;/li&gt;
&lt;li&gt;La vision politique colle: redonner le contrôle des données aux utilisateurs
(voir &lt;a class="reference external" href="http://unhosted.org/"&gt;unhosted&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;Les choix techniques compatibles avec ce qu'on a commencé (CORS, REST, OAuth 2);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En revanche, vis à vis de la manipulation des données, il y a plusieurs
différences avec ce que nous souhaitons faire:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;L'API suit globalement une métaphore «fichiers» (dossier/documents), plutôt
que «données» (collection/enregistrements) ;&lt;/li&gt;
&lt;li&gt;Il n'y a pas de validation des enregistrements selon un schéma (même si
&lt;a class="reference external" href="https://remotestorage.io/doc/code/files/baseclient/types-js.html"&gt;certaines implémentations&lt;/a&gt; du
protocole le font) ;&lt;/li&gt;
&lt;li&gt;Il n'y a pas la possibilité de trier/filtrer les enregistrements selon des attributs ;&lt;/li&gt;
&lt;li&gt;Les permissions &lt;a class="reference external" href="https://groups.google.com/forum/#!topic/unhosted/5_NOGq8BPTo"&gt;se limitent à privé/public&lt;/a&gt; (et
&lt;a class="reference external" href="https://github.com/remotestorage/spec/issues/58#issue-27249452"&gt;l'auteur envisage plutôt un modèle à la Git&lt;/a&gt;) &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt; ;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;En résumé, il semblerait que ce que nous souhaitons faire avec le stockage
d'enregistrements validés est complémentaire avec &lt;em&gt;Remote Storage&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Si des besoins de persistence orientés «fichiers» se présentent, a priori nous aurions tort
de réinventer les solutions apportées par cette spécification. Il y a donc de grandes
chances que nous l´intégrions à terme, et que &lt;em&gt;Remote Storage&lt;/em&gt; devienne une facette
de notre solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pouchdb"&gt;
&lt;h2&gt;PouchDB&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pouchdb.com/"&gt;PouchDB&lt;/a&gt; est une bibliothèque JavaScript qui permet
de manipuler des enregistrements en local et de les synchroniser vers une base distante.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PouchDB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dbname'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
 &lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'dave@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'David'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;68&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://example.com/mydb'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Le projet a le vent en poupe, bénéficie de nombreux contributeurs,
l'éco-système est très riche et l'adoption par des projets &lt;a class="reference external" href="https://github.com/hoodiehq/wip-hoodie-store-on-pouchdb"&gt;comme Hoodie&lt;/a&gt; ne fait que
confirmer la pertinence de l'outil pour les développeurs frontend.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PouchDB&lt;/em&gt; gère un « store » local, dont la persistence est abstraite et &lt;a class="reference external" href="http://pouchdb.com/2014/07/25/pouchdb-levels-up.html"&gt;repose
sur&lt;/a&gt; l'API &lt;a class="reference external" href="https://github.com/level/levelup#relationship-to-leveldown"&gt;LevelDown&lt;/a&gt; pour persister
les données dans &lt;a class="reference external" href="https://github.com/Level/levelup/wiki/Modules#storage-back-ends"&gt;n'importe quel backend&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Même si &lt;em&gt;PouchDB&lt;/em&gt; adresse principalement les besoins des applications
«&lt;em&gt;offline-first&lt;/em&gt;», il peut être utilisé aussi bien dans le navigateur que côté
serveur, via Node.&lt;/p&gt;
&lt;div class="section" id="synchronisation"&gt;
&lt;h3&gt;Synchronisation&lt;/h3&gt;
&lt;p&gt;La synchronisation (ou réplication) des données locales s'effectue sur un
&lt;a class="reference external" href="http://couchdb.apache.org/"&gt;CouchDB&lt;/a&gt; distant.&lt;/p&gt;
&lt;p&gt;Le projet &lt;a class="reference external" href="https://github.com/pouchdb/pouchdb-server"&gt;PouchDB Server&lt;/a&gt;
implémente l'API de CouchDB en NodeJS. Comme &lt;em&gt;PouchDB&lt;/em&gt; est utilisé, on obtient
un service qui se comporte comme un &lt;em&gt;CouchDB&lt;/em&gt; mais qui stocke ses données
n'importe où, dans un &lt;em&gt;Redis&lt;/em&gt; ou un &lt;em&gt;PostgreSQL&lt;/em&gt; par exemple.&lt;/p&gt;
&lt;p&gt;La synchronisation est complète. Autrement dit, tous les enregistrements qui
sont sur le serveur se retrouvent synchronisés dans le client. Il est possible
de filtrer les collections synchronisées, mais cela &lt;a class="reference external" href="http://pouchdb.com/2015/04/05/filtered-replication.html"&gt;n'a pas pour objectif de
sécuriser l'accès aux données&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;L'approche recommandée pour cloisonner les données par utilisateur consiste
à créer &lt;a class="reference external" href="https://github.com/nolanlawson/pouchdb-authentication#some-people-can-read-some-docs-some-people-can-write-those-same-docs"&gt;une base de données par utilisateur&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ce n'est pas forcément un problème, CouchDB &lt;a class="reference external" href="https://mail-archives.apache.org/mod_mbox/couchdb-user/201401.mbox/%3C52CEB873.7080404@ironicdesign.com%3E"&gt;supporte des centaines de milliers
de bases sans sourciller&lt;/a&gt;.
Mais selon les cas d'utilisation, le cloisement n'est pas toujours facile
à déterminer (par rôle, par application, par collection, ...).&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="le-cas-d-utilisation-payments"&gt;
&lt;h2&gt;Le cas d'utilisation « Payments »&lt;/h2&gt;
&lt;img alt="Put Payments Here  -- Before the Internet - CC-NC-SA Katy Silberger https://www.flickr.com/photos/katysilbs/11163812186" src="http://www.servicedenuages.fr/images/put-payments.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;Dans les prochaines semaines, nous devrons mettre sur pied un prototype pour
tracer l'historique des paiements et abonnements d'un utilisateur.&lt;/p&gt;
&lt;p&gt;Le besoin est simple:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;l'application « Payment » enregistre les paiements et abonnements d'un
utilisateur pour une application donnée;&lt;/li&gt;
&lt;li&gt;l'application « Donnée » interroge le service pour vérifier qu'un utilisateur
a payé ou est abonné;&lt;/li&gt;
&lt;li&gt;l'utilisateur interroge le service pour obtenir la liste de tous ses
abonnements.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Seule l'application « Payment » a le droit de créer/modifier/supprimer des
enregistrements, les deux autres ne peuvent que consulter en lecture seule.&lt;/p&gt;
&lt;p&gt;Une application donnée ne peut pas accéder aux paiements des autres
applications, et un utilisateur ne peut pas accéder aux paiements des autres
utilisateurs.&lt;/p&gt;
&lt;div class="section" id="avec-remotestorage"&gt;
&lt;h3&gt;Avec RemoteStorage&lt;/h3&gt;
&lt;img alt="Remote Love - CC-BY-NC Julie https://www.flickr.com/photos/mamajulie2008/2609549461" class="align-center" src="http://www.servicedenuages.fr/images/remote-love.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;Clairement, l'idée de &lt;em&gt;RemoteStorage&lt;/em&gt; est de dissocier l'application executée,
et les données créées par l'utilisateur avec celle-ci.&lt;/p&gt;
&lt;p&gt;Dans notre cas, c'est l'application « Payment » qui manipule des données
concernant un utilisateur. Mais celles-ci ne lui appartiennent pas directement:
certes un utilisateur doit pouvoir les supprimer, surtout pas en créer ou les
modifier!&lt;/p&gt;
&lt;p&gt;La notion de permissions limitée à privé/publique ne suffit pas dans ce cas
précis.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="avec-pouchdb"&gt;
&lt;h3&gt;Avec PouchDB&lt;/h3&gt;
&lt;p&gt;Il va falloir créer une &lt;em&gt;base de données&lt;/em&gt; par utilisateur, afin d'isoler les
enregistrements de façon sécurisée.  Seule l'application « Payment » aura tous
les droits sur les databases.&lt;/p&gt;
&lt;p&gt;Mais cela ne suffit pas.&lt;/p&gt;
&lt;p&gt;Il ne faut pas qu'une application puisse voir les paiements des autres
applications, donc il va aussi falloir recloisonner, et créer une &lt;em&gt;base de
données&lt;/em&gt; par application.&lt;/p&gt;
&lt;p&gt;Quand un utilisateur voudra accéder à l'ensemble de ses paiements, il faudra
agréger les &lt;em&gt;databases&lt;/em&gt; de toutes les applications. Quand l'équipe marketing
voudra faire des statistiques sur l'ensemble des applications, il faudra
agrégér des centaines de milliers de &lt;em&gt;databases&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Ce qui est fort dommage, puisqu'il est probable que les paiements ou
abonnements d'un utilisateur pour une application se comptent sur les doigts
d'une main. Des centaines de milliers de bases contenant moins de
5 enregistrements ?&lt;/p&gt;
&lt;p&gt;De plus, dans le cas de l'application « Payment », le serveur est implémenté en
Python. Utiliser un wrapper JavaScript comme le fait &lt;a class="reference external" href="https://pythonhosted.org/Python-PouchDB/"&gt;python-pouchdb&lt;/a&gt; cela ne nous fait pas trop rêver.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="un-nouvel-eco-systeme"&gt;
&lt;h2&gt;Un nouvel éco-système ?&lt;/h2&gt;
&lt;img alt="Wagon wheel - CC-BY-NC-SA arbyreed https://www.flickr.com/photos/19779889@N00/16161808220" src="http://www.servicedenuages.fr/images/wagon-wheel.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;Évidemment, quand on voit la richesse des projets &lt;em&gt;PouchDB&lt;/em&gt; et &lt;em&gt;Remote Storage&lt;/em&gt;
et la dynamique de ces communautés, il est légitime d'hésiter avant de
développer une solution alternative.&lt;/p&gt;
&lt;p&gt;Quand nous avons créé le serveur &lt;em&gt;Reading List&lt;/em&gt;, nous l'avons construit avec
&lt;a class="reference external" href="http://cliquet.readthedocs.org/"&gt;Cliquet&lt;/a&gt;, ce fût l'occasion de mettre au
point &lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/api/"&gt;un protocole très simple&lt;/a&gt;, fortement inspiré de
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Firefox_Sync"&gt;Firefox Sync&lt;/a&gt;, pour faire de la
synchronisation d'enregistrements.&lt;/p&gt;
&lt;p&gt;Et si les clients &lt;em&gt;Reading List&lt;/em&gt; ont pu être implémentés en quelques semaines,
que ce soit en JavaScript, Java (Android) et ASM (Add-on Firefox), c'est que le
principe «&lt;em&gt;offline first&lt;/em&gt;» du service est trivial.&lt;/p&gt;
&lt;div class="section" id="les-compromis"&gt;
&lt;h3&gt;Les compromis&lt;/h3&gt;
&lt;p&gt;Évidemment, nous n'avons pas la prétention de concurrencer &lt;em&gt;CouchDB&lt;/em&gt;. Nous faisons plusieurs
concessions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;De base, les collections d'enregistrements sont cloisonnées par utilisateur;&lt;/li&gt;
&lt;li&gt;Pas d'historique des révisions;&lt;/li&gt;
&lt;li&gt;Pas de diff sur les enregistrements entre révisions;&lt;/li&gt;
&lt;li&gt;De base, pas de résolution de conflit automatique;&lt;/li&gt;
&lt;li&gt;Pas de synchronisation par flux (&lt;em&gt;streams&lt;/em&gt;);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jusqu'à preuve du contraire, ces compromis excluent la possibilité
d'implémenter un &lt;a class="reference external" href="https://github.com/pouchdb/pouchdb/blob/master/lib/adapters/http/http.js#L721-L946"&gt;adapter PouchDB&lt;/a&gt;
pour la synchronisation avec le protocole HTTP de &lt;em&gt;Cliquet&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Dommage puisque capitaliser sur l'expérience client de &lt;em&gt;PouchDB&lt;/em&gt; au niveau
synchro client semble être une très bonne idée.&lt;/p&gt;
&lt;p&gt;En revanche, nous avons plusieurs fonctionnalités intéressantes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Pas de map-reduce;&lt;/li&gt;
&lt;li&gt;Synchronisation partielle et/ou ordonnée et/ou paginée    ;&lt;/li&gt;
&lt;li&gt;Le client choisit, via des headers, d'écraser la donnée ou de respecter la version du serveur ;&lt;/li&gt;
&lt;li&gt;Un seul serveur à déployer pour N applications ;&lt;/li&gt;
&lt;li&gt;Auto-hébergement simplissime ;&lt;/li&gt;
&lt;li&gt;Le client peut choisir de ne pas utiliser de « store local » du tout ;&lt;/li&gt;
&lt;li&gt;Dans le client JS, la gestion du « store local » sera externalisée (on pense
à &lt;a class="reference external" href="https://github.com/mozilla/localForage"&gt;LocalForage&lt;/a&gt; ou &lt;a class="reference external" href="https://github.com/dfahlander/Dexie.js"&gt;Dexie.js&lt;/a&gt;) ;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Et, on répond au reste des &lt;a class="reference external" href="#storage-specs"&gt;specifications mentionnées au début de l'article&lt;/a&gt; !&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="les-arguments-philosophiques"&gt;
&lt;h3&gt;Les arguments philosophiques&lt;/h3&gt;
&lt;p&gt;Il est &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Law_of_the_instrument"&gt;illusoire de penser qu'on peut tout faire avec un seul outil&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nous avons d'autres cas d'utilisations dans les cartons qui semblent correspondre au scope de &lt;em&gt;PouchDB&lt;/em&gt;
(&lt;em&gt;pas de notion de permissions ou de partage, environnement JavaScript, ...&lt;/em&gt;). Nous saurons en tirer
profit quand cela s'avèrera pertinent !&lt;/p&gt;
&lt;p&gt;L'éco-système que nous voulons construire tentera de couvrir les cas d'utilisation
qui sont mal adressés par &lt;em&gt;PouchDB&lt;/em&gt;. Il se voudra:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Basé sur notre protocole très simple ;&lt;/li&gt;
&lt;li&gt;Minimaliste et multi-usages (&lt;em&gt;comme la fameuse 2CV&lt;/em&gt;) ;&lt;/li&gt;
&lt;li&gt;Naïf (&lt;em&gt;pas de rocket science&lt;/em&gt;) ;&lt;/li&gt;
&lt;li&gt;Sans magie (&lt;em&gt;explicite et facile à réimplémenter from scratch&lt;/em&gt;) ;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/rationale.html"&gt;La philosophie et les fonctionnalités du toolkit python Cliquet&lt;/a&gt; seront bien entendu
à l'honneur :)&lt;/p&gt;
&lt;p&gt;Quant à &lt;em&gt;Remote Storage&lt;/em&gt;, dès que le besoin se présentera, nous serons très fier
de rejoindre l'initiative, mais pour l'instant cela nous paraît risqué de démarrer
en tordant la solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="les-arguments-pratiques"&gt;
&lt;h3&gt;Les arguments pratiques&lt;/h3&gt;
&lt;p&gt;Avant d'accepter de déployer une solution à base de &lt;em&gt;CouchDB&lt;/em&gt;, les &lt;em&gt;ops&lt;/em&gt; de Mozilla
vont nous demander de leur prouver par A+B que ce n'est pas faisable avec
les stacks qui sont déjà rodées en interne (i.e. MySQL, Redis, PostgreSQL).&lt;/p&gt;
&lt;p&gt;De plus, on doit s'engager sur une pérennité d'au moins 5 ans pour les données.
Avec &lt;em&gt;Cliquet&lt;/em&gt;, en utilisant le backend PostgreSQL, les données sont persistées
à plat dans un &lt;a class="reference external" href="https://github.com/mozilla-services/cliquet/blob/40aa33/cliquet/storage/postgresql/schema.sql#L14-L28"&gt;schéma PostgreSQL tout bête&lt;/a&gt;.
Ce qui ne sera pas le cas d'un adapteur LevelDown qui va manipuler des notions
de révisions éclatées dans un schéma clé-valeur.&lt;/p&gt;
&lt;p&gt;Si nous basons le service sur &lt;em&gt;Cliquet&lt;/em&gt;, comme c'est le cas avec &lt;a class="reference external" href="http://kinto.readthedocs.org"&gt;Kinto&lt;/a&gt;,
tout le travail d'automatisation de la mise en production (&lt;em&gt;monitoring,
builds RPM, Puppet...&lt;/em&gt;) que nous avons fait pour &lt;em&gt;Reading List&lt;/em&gt; est
complètement réutilisable.&lt;/p&gt;
&lt;p&gt;De même, si on repart avec une stack complètement différente, nous allons
devoir recommencer tout le travail de rodage, de profiling et d'optimisation
effectué au premier trimestre.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="les-prochaines-etapes"&gt;
&lt;h2&gt;Les prochaines étapes&lt;/h2&gt;
&lt;p&gt;Et il est encore temps de changer de stratégie :) Nous aimerions avoir un
maximum de retours !  C'est toujours une décision difficile à prendre...
&lt;tt class="docutils literal"&gt;&amp;lt;/appel à troll&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Tordre un éco-système existant vs. constuire sur mesure ;&lt;/li&gt;
&lt;li&gt;Maîtriser l'ensemble vs. s'intégrer ;&lt;/li&gt;
&lt;li&gt;Contribuer vs. refaire ;&lt;/li&gt;
&lt;li&gt;Guider vs. suivre.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Nous avons vraiment l'intention de rejoindre l'initiative &lt;a class="reference external" href="https://nobackend.org/"&gt;no-backend&lt;/a&gt;, et ce premier pas n'exclue pas que nous convergions
à terme ! Peut-être que nous allons finir par rendre notre service compatible
avec &lt;em&gt;Remote Storage&lt;/em&gt;, et peut-être que &lt;em&gt;PouchDB&lt;/em&gt; deviendra plus agnostique
quand au protocole de synchronisation...&lt;/p&gt;
&lt;img alt="XKCD — Standards https://xkcd.com/927/" src="http://www.servicedenuages.fr/images/standards.png" style="width: 500px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;Utiliser ce nouvel écosystème pour le projet « Payments » va nous permettre de
mettre au point un système de permissions (&lt;em&gt;probablement basé sur les scopes OAuth&lt;/em&gt;) qui
correspond au besoin exprimé. Et nous avons bien l'intention de puiser dans
&lt;a class="reference external" href="http://blog.daybed.io/daybed-revival.html"&gt;notre expérience avec Daybed sur le sujet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nous extrairons aussi le code des clients implémentés pour &lt;em&gt;Reading List&lt;/em&gt; afin
de faire un client JavaScript minimaliste.&lt;/p&gt;
&lt;p&gt;En partant dans notre coin, nous prenons plusieurs risques:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;réinventer une roue dont nous n'avons pas connaissance ;&lt;/li&gt;
&lt;li&gt;échouer à faire de l'éco-système &lt;em&gt;Cliquet&lt;/em&gt; un projet communautaire ;&lt;/li&gt;
&lt;li&gt;échouer à positionner &lt;em&gt;Cliquet&lt;/em&gt; dans la niche des cas non couverts par PouchDB :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Comme &lt;a class="reference external" href="http://pouchdb.com/2015/04/05/filtered-replication.html"&gt;le dit Giovanni Ornaghi&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
Rolling out your set of webservices, push notifications, or background services
might give you more control, but at the same time it will force you to engineer,
write, test, and maintain a whole new ecosystem.&lt;/blockquote&gt;
&lt;p&gt;C'est justement l'éco-système dont est responsable l'équipe &lt;em&gt;Mozilla Cloud Services&lt;/em&gt;!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Il existe le &lt;a class="reference external" href="https://sharesome.5apps.com/"&gt;projet Sharesome&lt;/a&gt; qui
permet de partager publiquement des ressources de son &lt;em&gt;remote Storage&lt;/em&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary></entry><entry><title>Ecosystem &amp; generic storage</title><link href="http://www.servicedenuages.fr/eco-systeme-et-stockage-generique-en.html" rel="alternate"></link><updated>2015-04-30T00:00:00+02:00</updated><author><name>Service de Nuages</name></author><id>tag:www.servicedenuages.fr,2015-04-30:eco-systeme-et-stockage-generique-en.html</id><summary type="html">&lt;div class="note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;This article was translated from French by Julien/Sphinx. We thank him a lot
for this effort! Note, that at the beginning of this year,
&lt;a class="reference external" href="https://medium.com/@Sphinx/mdn-pr%C3%A9sentation-de-la-documentation-javascript-70541cecae54"&gt;he also translated MDN to French&lt;/a&gt;!
&lt;strong&gt;Big up !&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;tl;dr We have to build a service to track payments, and we're hesitant
to go on with our own solution for storage and synchronization.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As we wrote in &lt;a class="reference external" href="http://www.servicedenuages.fr/service-de-nuages.html"&gt;the previous article (FR)&lt;/a&gt;,
we want to build a solution for generic data storage. We reboot &lt;a class="reference external" href="http://daybed.readthedocs.org"&gt;Daybed&lt;/a&gt;
at Mozilla !&lt;/p&gt;
&lt;p&gt;Our goal is simple: allow developers, whether they are from Mozilla or from the whole world,
to easily synchronize and save data associated to a user.&lt;/p&gt;
&lt;p id="storage-specs"&gt;Here are the aspects of the architecture that seem essential to us:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The solution must rely on a protocol, not on a particular implementation;&lt;/li&gt;
&lt;li&gt;Self-hosting of the whole solution must be dead simple;&lt;/li&gt;
&lt;li&gt;Authentication must be pluggable or decentralized (OAuth2, FxA, Persona);&lt;/li&gt;
&lt;li&gt;The server should be able to validate records;&lt;/li&gt;
&lt;li&gt;An authorization/permissions system must allow collection protection or
fine-grained records sharing;&lt;/li&gt;
&lt;li&gt;Conflicts resolution could happen server-side;&lt;/li&gt;
&lt;li&gt;Clients should be «&lt;em&gt;offline-first&lt;/em&gt;»;&lt;/li&gt;
&lt;li&gt;Clients should be able to easily merge/reconciliate data;&lt;/li&gt;
&lt;li&gt;Clients should be usable in the browser &lt;em&gt;and&lt;/em&gt; server-side;&lt;/li&gt;
&lt;li&gt;Every component should be simple and easily substituable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The first question we were asked was: «&lt;em&gt;Why don't you rather use PouchDB or Remote Storage?&lt;/em&gt;»&lt;/p&gt;
&lt;div class="section" id="remote-storage"&gt;
&lt;h2&gt;Remote Storage&lt;/h2&gt;
&lt;p&gt;Remote Storage is an open standard for user storage. &lt;a class="reference external" href="http://tools.ietf.org/html/draft-dejong-remotestorage-04"&gt;The specification&lt;/a&gt;
is based on existing and proven standards: Webfinger, OAuth2, CORS and REST.&lt;/p&gt;
&lt;p&gt;The API is pretty simple and &lt;a class="reference external" href="http://blog.cozycloud.cc/news/2014/08/12/when-unhosted-meets-cozy-cloud/"&gt;prestigious projects are using it&lt;/a&gt;.
There exist several &lt;a class="reference external" href="https://github.com/jcoglan/restore"&gt;server implementations&lt;/a&gt;
and there is even a &lt;a class="reference external" href="https://www.npmjs.com/package/remotestorage-server"&gt;Node squeleton&lt;/a&gt;
to build a custom server.&lt;/p&gt;
&lt;img alt="Remote Storage widget" class="align-left" src="http://www.servicedenuages.fr/images/remotestorage-widget.png" style="width: 243px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/remotestorage/remotestorage.js/"&gt;remoteStorage.js client&lt;/a&gt;
makes possible the integration of this solution in Web apps. This client is in charge of the «local store»,
caching, syncing and gives users a widget so that they can choose the server
which will receive the data (using Webfinger).&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/michielbdejong/ludbud"&gt;ludbud&lt;/a&gt;, a refined version of
&lt;em&gt;remoteStorage.js&lt;/em&gt; limits itself to the abstraction of the remote data storage.
At the end, it would be possible to have a single library and to store data
in either a &lt;em&gt;Remote Storage&lt;/em&gt; server, an &lt;em&gt;ownCloud&lt;/em&gt; server, or even on the bad guys'
like &lt;em&gt;Google Drive&lt;/em&gt; or &lt;em&gt;Dropbox&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;At first sight, the specification seemed to fit with what we want to do:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The philosophy of the protocol is sound;&lt;/li&gt;
&lt;li&gt;The ecosystem is well-thought;&lt;/li&gt;
&lt;li&gt;The political vision fits: give back the control of the data to the users
(see &lt;a class="reference external" href="http://unhosted.org/"&gt;unhosted&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;Technical choices are compatible with what we've already started (CORS, REST, OAuth2);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, regarding data manipulation, there are several differences with what we want to do:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The API seems «files» oriented (folders and documents) and not «data» (collections and records);&lt;/li&gt;
&lt;li&gt;There is no record validation following some schema (though &lt;a class="reference external" href="https://remotestorage.io/doc/code/files/baseclient/types-js.html"&gt;some implementations&lt;/a&gt; of the protocol are actually doing this);&lt;/li&gt;
&lt;li&gt;There is no option to sort/filter records with regards to their attributes;&lt;/li&gt;
&lt;li&gt;The permission system &lt;a class="reference external" href="https://groups.google.com/forum/#!topic/unhosted/5_NOGq8BPTo"&gt;is limited to private/public&lt;/a&gt; (and
&lt;a class="reference external" href="https://github.com/remotestorage/spec/issues/58#issue-27249452"&gt;the author is going for a git-like model&lt;/a&gt;) &lt;a class="footnote-reference" href="#id3" id="id1"&gt;[1]&lt;/a&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To summarize, it would seem that what we want to achieve with the storage of
records is complementary to &lt;em&gt;Remote Storage&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If there are some needs about «file oriented» persistence, it would be dull to
reinvent this solution. So there is a great chance that we will integrate
&lt;em&gt;Remote Storage&lt;/em&gt; some day and that it will become a facet of our solution.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="pouchdb"&gt;
&lt;h2&gt;PouchDB&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pouchdb.com/"&gt;PouchDB&lt;/a&gt; is a Javascript library allowing to manipulate
records locally and synchronize them to a distant database.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;db&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;PouchDB&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'dbname'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;put&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
 &lt;span class="nx"&gt;_id&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'dave@gmail.com'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'David'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="nx"&gt;age&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;68&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;db&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;replicate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'http://example.com/mydb'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The project sees some traction and benefits from a lot of contributors. The
ecosystem is rich and adoption by projects &lt;a class="reference external" href="https://github.com/hoodiehq/wip-hoodie-store-on-pouchdb"&gt;such as Hoodie&lt;/a&gt; confirms the tool
pertinence for frontend developers.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PouchDB&lt;/em&gt; handles a local « store » which persistence is abstract and
&lt;a class="reference external" href="http://pouchdb.com/2014/07/25/pouchdb-levels-up.html"&gt;is built on top&lt;/a&gt;
of the &lt;a class="reference external" href="https://github.com/level/levelup#relationship-to-leveldown"&gt;LevelDown API&lt;/a&gt;
to persist data in &lt;a class="reference external" href="https://github.com/Level/levelup/wiki/Modules#storage-back-ends"&gt;any backend&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Even if &lt;em&gt;PouchDB&lt;/em&gt; is mainly done for «&lt;em&gt;offline-first&lt;/em&gt;» applications, it
can be used inside browsers and on the server side, via Node.&lt;/p&gt;
&lt;div class="section" id="synchronization"&gt;
&lt;h3&gt;Synchronization&lt;/h3&gt;
&lt;p&gt;Local data synchronization (or replication) is done on a remote
&lt;a class="reference external" href="http://couchdb.apache.org/"&gt;CouchDB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://github.com/pouchdb/pouchdb-server"&gt;PouchDB Server&lt;/a&gt; project
implements the CouchDB API in NodeJS. Because &lt;em&gt;PouchDB&lt;/em&gt; itself is used, we
obtain a service which is behaving like a &lt;em&gt;CouchDB&lt;/em&gt;, but stores data
anywhere (in a &lt;em&gt;Redis&lt;/em&gt; or a &lt;em&gt;PostgreSQL&lt;/em&gt; database for instance).&lt;/p&gt;
&lt;p&gt;The synchronisation is complete. In other words, all records that are on
the server will end up being synchronised with the client. It is possible to filter
synchronized collections but &lt;a class="reference external" href="http://pouchdb.com/2015/04/05/filtered-replication.html"&gt;its purpose is not to secure data access&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In order to do so, it is recommanded to create &lt;a class="reference external" href="https://github.com/nolanlawson/pouchdb-authentication#some-people-can-read-some-docs-some-people-can-write-those-same-docs"&gt;a database per user&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This isn't necessarily a problem since CouchDB &lt;a class="reference external" href="https://mail-archives.apache.org/mod_mbox/couchdb-user/201401.mbox/%3C52CEB873.7080404@ironicdesign.com%3E"&gt;can handle hundreds of thousands
of databases without any problem&lt;/a&gt;.
However, depending on use cases, clustering and isolation (by role, application,
collection, ...) might not be dealt with easily.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="the-payments-use-case"&gt;
&lt;h2&gt;The « Payments » use case&lt;/h2&gt;
&lt;img alt="Put Payments Here  -- Before the Internet - CC-NC-SA Katy Silberger https://www.flickr.com/photos/katysilbs/11163812186" src="http://www.servicedenuages.fr/images/put-payments.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;During the next weeks, we will have to setup a prototype that keeps an history
of a user's payments and subscriptions.&lt;/p&gt;
&lt;p&gt;The requirements are simple:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The « Payment » application tracks payments and subscriptions of a user
for a given application;&lt;/li&gt;
&lt;li&gt;The « Data » application requests the service to check if a user paid or
has suscribed;&lt;/li&gt;
&lt;li&gt;The user requests the service to get a list of all payments/subscriptions
reltated to her.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The « Payment » application only should have the right to create/modify/delete
records. The two others can only have read-only access to these records.&lt;/p&gt;
&lt;p&gt;A given application cannot access to some other application payments and a given user cannot access to some other user's payments.&lt;/p&gt;
&lt;div class="section" id="with-remotestorage"&gt;
&lt;h3&gt;With RemoteStorage&lt;/h3&gt;
&lt;img alt="Remote Love - CC-BY-NC Julie https://www.flickr.com/photos/mamajulie2008/2609549461" class="align-center" src="http://www.servicedenuages.fr/images/remote-love.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;The idea of &lt;em&gt;Remote Storage&lt;/em&gt; is to separate the application from the data that
the user created with the application.&lt;/p&gt;
&lt;p&gt;In our use case, the « Payment » app is dealing with the data concerning a user.
However, this data does not directly belong to the user. A user should be able
to delete some records but he/she cannot create or edit some existing payments!&lt;/p&gt;
&lt;p&gt;The concept of permissions, limited to private/public is not suitable here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="with-pouchdb"&gt;
&lt;h3&gt;With PouchDB&lt;/h3&gt;
&lt;p&gt;It will be necessary to create a &lt;em&gt;database&lt;/em&gt; per user in order to separate the
records in a secure way. Only the « Payment » app will be granted full rights
on the different databases.&lt;/p&gt;
&lt;p&gt;But this won't be enough.&lt;/p&gt;
&lt;p&gt;An app must not see payments from another application so it would also be
necessary to create a database per application.&lt;/p&gt;
&lt;p&gt;When a user will need to access payments, it will be mandatory to join every
&lt;em&gt;database&lt;/em&gt; of every application for this current user. When the marketing
department will want to build stats for all apps, one will have to join hundreds
of thousands of databases.&lt;/p&gt;
&lt;p&gt;This doesn't seem appropriate: most of the time, there are only few
payments/subscriptions for a given user. Should we have hundreds of thousands of
databases, each of which will have less than 5 records?&lt;/p&gt;
&lt;p&gt;Moreover, the server side of « Payment » is implemented with Python, using a
JavaScript wrapper (as &lt;a class="reference external" href="https://pythonhosted.org/Python-PouchDB/"&gt;python-pouchdb&lt;/a&gt;) is not something we thrive for.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="a-new-ecosystem"&gt;
&lt;h2&gt;A new ecosystem?&lt;/h2&gt;
&lt;img alt="Wagon wheel - CC-BY-NC-SA arbyreed https://www.flickr.com/photos/19779889@N00/16161808220" src="http://www.servicedenuages.fr/images/wagon-wheel.jpg" style="width: 640px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;It is obvious that &lt;em&gt;PouchDB&lt;/em&gt; and &lt;em&gt;Remote Storage&lt;/em&gt; are rich projects with dynamic communities. Therefore, it's reasonable to wonder if one should develop another solution.&lt;/p&gt;
&lt;p&gt;When we created the &lt;em&gt;Reading List&lt;/em&gt; server, we built it with
&lt;a class="reference external" href="http://cliquet.readthedocs.org/"&gt;Cliquet&lt;/a&gt;. We had a chance to setup &lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/api/"&gt;a very simple protocol&lt;/a&gt;, strongly inspired by
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Firefox_Sync"&gt;Firefox Sync&lt;/a&gt;, to sync records.&lt;/p&gt;
&lt;p&gt;The reason clients for &lt;em&gt;Reading List&lt;/em&gt; were implemented in few weeks, whether in
JavaScript, Java (Android) or ASM (Firefox addon), is that the «&lt;em&gt;offline first&lt;/em&gt;»
principle of the service is trivial.&lt;/p&gt;
&lt;div class="section" id="tradeoffs"&gt;
&lt;h3&gt;Tradeoffs&lt;/h3&gt;
&lt;p&gt;Of course, we don't intend to compete with &lt;em&gt;CouchDB&lt;/em&gt; and are making some
concessions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Per default, records collections are isolated by user;&lt;/li&gt;
&lt;li&gt;There is no history of revisions;&lt;/li&gt;
&lt;li&gt;There is no diff between each revision;&lt;/li&gt;
&lt;li&gt;Per default, there is no automatic conflict resolution;&lt;/li&gt;
&lt;li&gt;There is no stream synchronization.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If we are not mistaken, these tradeoffs exclude the possibility of
implementing &lt;a class="reference external" href="https://github.com/pouchdb/pouchdb/blob/master/lib/adapters/http/http.js#L721-L946"&gt;a PouchDB adapter&lt;/a&gt; for the HTTP-based synchronisation protocol of &lt;em&gt;Cliquet&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Too bad since it would have been a great opportunity to capitalize on the user
experience of &lt;em&gt;PouchDB&lt;/em&gt; regarding the synchronisation client.&lt;/p&gt;
&lt;p&gt;However, we have some interesting features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No map-reduce;&lt;/li&gt;
&lt;li&gt;Partial and/or ordered and/or paginated synchronisation;&lt;/li&gt;
&lt;li&gt;The client can choose, with headers, to delete the data or to accept the
server version;&lt;/li&gt;
&lt;li&gt;A single server is deployed for N apps;&lt;/li&gt;
&lt;li&gt;Self hosting is dead simple;&lt;/li&gt;
&lt;li&gt;The client can choose not to use local storage at all;&lt;/li&gt;
&lt;li&gt;The JavaScript client will have its local store management delegated (we're
thinking about &lt;a class="reference external" href="https://github.com/mozilla/localForage"&gt;LocalForage&lt;/a&gt; or
&lt;a class="reference external" href="https://github.com/dfahlander/Dexie.js"&gt;Dexie.js&lt;/a&gt;);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And we are complying with &lt;a class="reference external" href="#storage-specs"&gt;the specs we drew at the beginning of the article&lt;/a&gt;!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="philosophical-arguments"&gt;
&lt;h3&gt;Philosophical arguments&lt;/h3&gt;
&lt;p&gt;It's &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Law_of_the_instrument"&gt;illusionary to think that we can achieve everything with a single tool&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We have other use cases that seem to fit with &lt;em&gt;PouchDB&lt;/em&gt; (&lt;em&gt;no concept of
permission or sharing, JavaScript environment, ...&lt;/em&gt;). We'll take advantage of it
when relevant!&lt;/p&gt;
&lt;p&gt;The ecosystem we want to build should address the use cases that are badly
handled by &lt;em&gt;PouchDB&lt;/em&gt;. It should be:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Based on our very simple protocol;&lt;/li&gt;
&lt;li&gt;Minimalist and with multiple purposes (&lt;em&gt;like our very French 2CV&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;Naive (&lt;em&gt;no rocket-science&lt;/em&gt;);&lt;/li&gt;
&lt;li&gt;Without magic (&lt;em&gt;explicit and easy to reimplement from scratch&lt;/em&gt;);&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a class="reference external" href="http://cliquet.readthedocs.org/en/latest/rationale.html"&gt;The philosophy and the features of our Python toolkit, Cliquet&lt;/a&gt;, will of course be honoured :)&lt;/p&gt;
&lt;p&gt;As for &lt;em&gt;Remote Storage&lt;/em&gt;, whenever we face the need, we will proud to join
this initiative. However, as for now, it seems risky to start by bending the
solution to our own needs.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="practical-arguments"&gt;
&lt;h3&gt;Practical arguments&lt;/h3&gt;
&lt;p&gt;Before being willingly to deploy a &lt;em&gt;CouchDB&lt;/em&gt; solution, Mozilla &lt;em&gt;ops&lt;/em&gt; will ask us
to precisely prove that it's not currently doable with experienced stacks (e.g.
MySQL, Redis, PostgreSQL).&lt;/p&gt;
&lt;p&gt;We will also have to guarantee a minimum 5 years lifetime regarding the data. With
&lt;em&gt;Cliquet&lt;/em&gt;, using the PostgreSQL backend, our data is persisted in &lt;a class="reference external" href="https://github.com/mozilla-services/cliquet/blob/40aa33/cliquet/storage/postgresql/schema.sql#L14-L28"&gt;a flat PostgreSQL schema&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This wouldn't be the case with a LevelDown adapter that handles revisions split
in a key-value scheme.&lt;/p&gt;
&lt;p&gt;If we based our service on Cliquet, like we did with &lt;a class="reference external" href="http://kinto.readthedocs.org"&gt;Kinto&lt;/a&gt;, all the automation work of deploying
(&lt;em&gt;monitoring, RPM builds, Puppet...&lt;/em&gt;) that was done for &lt;em&gt;Reading List&lt;/em&gt; will be
completely reusable.&lt;/p&gt;
&lt;p&gt;As said before, if we go with another totally new stack, we will have to start
again from scratch, including lapping, profiling, optimizing, all of which has
already been done during the first quarter of this year for Reading List.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="next-steps"&gt;
&lt;h2&gt;Next steps&lt;/h2&gt;
&lt;p&gt;It's still time to change our strategy :) And we welcome any feedback!
It's always a difficult decision to make... &lt;tt class="docutils literal"&gt;&amp;lt;/troll call&amp;gt;&lt;/tt&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Twist an existing ecosystem vs build a new custom one;&lt;/li&gt;
&lt;li&gt;Master the whole system or to integrate our solution;&lt;/li&gt;
&lt;li&gt;Contribute vs redo;&lt;/li&gt;
&lt;li&gt;Guide vs follow.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We really seek to join the &lt;a class="reference external" href="https://nobackend.org/"&gt;no-backend&lt;/a&gt; initiative.
This first step might lead us to converge in the end! Maybe our service will end
up being compatible with Remote Storage, maybe PouchDB will become more agnostic
regarding the synchronisation protocol...&lt;/p&gt;
&lt;img alt="XKCD — Standards https://xkcd.com/927/" src="http://www.servicedenuages.fr/images/standards.png" style="width: 500px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;Using this new ecosystem for the « Payments » project will allow us to setup a
suitable permission system (&lt;em&gt;probably built on OAuth scopes&lt;/em&gt;). We are also
looking forward to &lt;a class="reference external" href="http://blog.daybed.io/daybed-revival.html"&gt;capitalizing on our Daybed experience for this project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We'll also extract some parts of the clients source code that were implemented
for &lt;em&gt;Reading List&lt;/em&gt; in order to provide a minimalist JavaScript client.&lt;/p&gt;
&lt;p&gt;By going this way, we are taking several risks:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;reinventing a wheel we don't know;&lt;/li&gt;
&lt;li&gt;failing to make the &lt;em&gt;Cliquet&lt;/em&gt; ecosystem a community project;&lt;/li&gt;
&lt;li&gt;failing to place &lt;em&gt;Cliquet&lt;/em&gt; in the niche for the use cases that are not
covered with &lt;em&gt;PouchDB&lt;/em&gt; :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As &lt;a class="reference external" href="http://pouchdb.com/2015/04/05/filtered-replication.html"&gt;Giovanni Ornaghi said&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
Rolling out your set of webservices, push notifications, or background services
might give you more control, but at the same time it will force you to engineer,
write, test, and maintain a whole new ecosystem.&lt;/blockquote&gt;
&lt;p&gt;And this ecosystem is precisely the one that &lt;em&gt;Mozilla Cloud Services&lt;/em&gt; team
is in charge of!&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;/col&gt;&lt;col&gt;&lt;/col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The &lt;a class="reference external" href="https://sharesome.5apps.com/"&gt;Sharesome project&lt;/a&gt; allows for some
public sharing of one's resources from one's &lt;em&gt;Remote Storage&lt;/em&gt;.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</summary></entry><entry><title>Service de nuages !</title><link href="http://www.servicedenuages.fr/service-de-nuages.html" rel="alternate"></link><updated>2015-04-16T00:00:00+02:00</updated><author><name>Service de Nuages</name></author><id>tag:www.servicedenuages.fr,2015-04-16:service-de-nuages.html</id><summary type="html">&lt;p&gt;Pas mal de changements depuis le début de l'année pour l'équipe
«cloud-services» francophone!&lt;/p&gt;
&lt;p&gt;Tout d'abord, nouvelle importante, l'équipe s'étoffe avec des profils assez
complémentaires: &lt;a class="reference external" href="https://nicolas.perriault.net/"&gt;n1k0&lt;/a&gt; et &lt;a class="reference external" href="http://mathieu-leplatre.info"&gt;Mathieu&lt;/a&gt; sont venus prêter main forte à &lt;a class="reference external" href="http://ziade.org/"&gt;Tarek&lt;/a&gt;, &lt;a class="reference external" href="http://natim.ionyse.com"&gt;Rémy&lt;/a&gt; et &lt;a class="reference external" href="http://notmyidea.org"&gt;Alexis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Le début de l'année a vu le lancement de &lt;a class="reference external" href="https://www.mozilla.org/en-US/firefox/hello/"&gt;Firefox Hello&lt;/a&gt; ce qui nous a permis de passer
à l'échelle &lt;a class="reference external" href="https://github.com/mozilla-services/loop-server"&gt;le serveur&lt;/a&gt;,
écrit en Node.js®, pour l'occasion.&lt;/p&gt;
&lt;div class="section" id="un-serveur-de-listes-de-lecture"&gt;
&lt;h2&gt;Un serveur de listes de lecture&lt;/h2&gt;
&lt;p&gt;En parallèle, un projet de &lt;a class="reference external" href="https://readinglist.readthedocs.org"&gt;synchronisation de liste de lecture&lt;/a&gt; (&lt;em&gt;Reading List&lt;/em&gt;) a vu le jour.  L'idée
étant de pouvoir marquer des pages "à lire pour plus tard" et de continuer la
lecture sur n'importe quel périphérique synchronisé (Firefox pour Android ou
Firefox Desktop). Un équivalent libre à &lt;a class="reference external" href="http://getpocket.com"&gt;Pocket&lt;/a&gt; en quelque sorte, qu'il est
possible d'héberger soit-même.&lt;/p&gt;
&lt;img alt="Capture d'écran de Firefox nightly avec readinglist." src="http://www.servicedenuages.fr/images/readinglist-screenshot.png" style="width: 953px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;Pour le construire, nous aurions pu réutiliser &lt;a class="reference external" href="https://github.com/mozilla-services/server-syncstorage"&gt;Firefox Sync&lt;/a&gt;, après tout
c'est un service de synchronisation de données très robuste, construit avec &lt;a class="reference external" href="http://cornice.readthedocs.org/"&gt;Cornice&lt;/a&gt;.
Mais seulement, &lt;em&gt;Sync&lt;/em&gt; n'a pas été pensé pour garantir la pérennité des données,
et la marche était trop haute pour changer ça en profondeur.&lt;/p&gt;
&lt;p&gt;Nous aurions pu aussi nous contenter de faire une énième application qui expose
une API et persiste des données dans une base de données.&lt;/p&gt;
&lt;p&gt;Mais cette nouvelle petite équipe n'est pas là par hasard :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="la-daybed-team"&gt;
&lt;h2&gt;La «Daybed Team»&lt;/h2&gt;
&lt;p&gt;On partage une vision: un service générique de stockage de données ! Peut-être
que ça vous rappelle &lt;a class="reference external" href="https://daybed.io"&gt;un certain projet nommé Daybed&lt;/a&gt; ?
Pour les applications clientes, JavaScript, mobiles ou autres, l'utilisation de
ce service doit être un jeu d'enfant ! L'application gère ses données
localement (aka offline-first), et synchronise à la demande.&lt;/p&gt;
&lt;p&gt;Ici, le cœur du serveur &lt;em&gt;Reading List&lt;/em&gt; est justement une API "CRUD" (Create,
Retrieve, Update, Delete), qui gère de la synchronisation et de
l'authentification. Nous avons donc pris le parti de faire une API "simple",
avec le moins de spécificités possible, qui poserait les bases d'un service
générique. Notamment parce qu'il y a d'autres projets dans la même trempe qui vont suivre.&lt;/p&gt;
&lt;p&gt;Pas mal d'expérience ayant été accumulée au sein de l'équipe, avec d'une part la
création de &lt;em&gt;Firefox Sync&lt;/em&gt;, et d'autre part avec &lt;em&gt;Daybed&lt;/em&gt;, notre side-project, nous
tentons de ne pas reproduire les mêmes erreurs, tout en gardant les concepts
qui ont fait leurs preuves.&lt;/p&gt;
&lt;p&gt;Par exemple, nous avons conservé le mécanisme de collections d'enregistrements
et de &lt;em&gt;timestamp&lt;/em&gt; de &lt;em&gt;Sync&lt;/em&gt;. Comme ces problématiques sont récurrentes, voire
incontournables, nous avons décidé de reprendre le protocole de synchronisation,
de l'étendre légèrement et surtout de le dissocier du projet de listes de lecture.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="le-mecanisme-qui-force-a-aller-de-l-avant"&gt;
&lt;h2&gt;Le mécanisme qui force à aller de l'avant&lt;/h2&gt;
&lt;p&gt;Comme première pierre à l'édifice, nous avons donné naissance au projet
&lt;a class="reference external" href="https://cliquet.readthedocs.org"&gt;Cliquet&lt;/a&gt;, dont l'idée principale est de
fournir une implémentation de ce protocole en python, tout en factorisant
l'ensemble de nos bonnes pratiques (pour la prod notamment).&lt;/p&gt;
&lt;img alt="Logo du projet Cliquet" class="align-right" src="http://www.servicedenuages.fr/images/cliquet-logo.png" style="width: 300px; height: auto; max-width: 100%;"/&gt;
&lt;p&gt;L'avantage d'avoir un protocole plutôt qu'un monolithe, c'est que si vous
préférez Asyncio, io.js ou Go, on vous encouragera à publier votre
implémentation alternative !&lt;/p&gt;
&lt;p&gt;Avec &lt;em&gt;Cliquet&lt;/em&gt;, le code du serveur liste de lecture consiste principalement
à définir un schéma pour les enregistrements, puis à forcer des valeurs de
champs sur certains appels. Cela réduit ce projet à quelques dizaines de lignes
de code.&lt;/p&gt;
&lt;p&gt;Quant au futur service de stockage générique, &lt;a class="reference external" href="http://kinto.readthedocs.org"&gt;le projet&lt;/a&gt; en est encore à ses balbutiements mais c'est
bel et bien en route ! Il permet déjà d'être branché comme backend de stockage
dans une application &lt;em&gt;Cliquet&lt;/em&gt;, et ça &lt;a class="reference external" href="https://github.com/mozilla-services/kinto/blob/0.2.1/kinto/views/collection.py"&gt;implémenté en 20 lignes de code&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Ah, et cette fois, nous ne construirons les fonctionnalités qu'à partir des
besoins concrets qui surviennent. Ça paraît tout bête, mais sur &lt;em&gt;Daybed&lt;/em&gt; on
l'a pas vu venir :)&lt;/p&gt;
&lt;p&gt;Dans les prochains articles, nous avons prévu de décrire les bonnes pratiques
rassemblées dans le protocole (ou &lt;em&gt;Cliquet&lt;/em&gt;), certains points techniques précis
et de vous présenter notre vision via des exemples et tutoriaux.&lt;/p&gt;
&lt;p&gt;À bientôt, donc !&lt;/p&gt;
&lt;/div&gt;
</summary></entry><entry><title>Le printemps</title><link href="http://www.servicedenuages.fr/le-printemps.html" rel="alternate"></link><updated>2015-04-15T00:00:00+02:00</updated><author><name>Service de Nuages</name></author><id>tag:www.servicedenuages.fr,2015-04-15:le-printemps.html</id><summary type="html">&lt;p&gt;C'est le printemps et n'en déplaise à certains, il est temps de faire
un peu de ménage.&lt;/p&gt;
&lt;p&gt;Voilà quelques temps que nous accumulons les expériences et que nous
ne les partagions plus tellement par écrit.&lt;/p&gt;
&lt;p&gt;Il y a bien eu une conférence francophone sur Hawk l'an passé et
quelques articles en anglais sur le blog de Mozilla, mais
parfois la barrière de la langue ne permet pas une entière
satisfaction sur ces retours d'expérience.&lt;/p&gt;
&lt;p&gt;C'est ainsi qu'en ce début de printemps 2015 nous dépoussiérons nos
esprits et que nous vous proposons un ensemble d'articles en français
sur ce que nous faisons dans notre petite équipe du Service de Nuages
de Mozilla.&lt;/p&gt;
&lt;img alt="Logo du service des nuages" src="http://www.servicedenuages.fr/images/service_de_nuages.png" style="width: 2268px; height: auto; max-width: 100%;"/&gt;
</summary></entry></feed>